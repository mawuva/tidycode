[project]
name = "tidycode"
version = "0.1.0"
description = "A fun and simple CLI to keep your Python projects clean and secure (format, lint, test, doctor, etc.)"
authors = [
    {name = "Ephraim Seddor",email = "seddorephraim7@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
    "typer[all] (>=0.17.3,<0.18.0)",
    "questionary (>=2.1.1,<3.0.0)",
    "tomlkit (>=0.13.3,<0.14.0)",
    "pyyaml (>=6.0.2,<7.0.0)",
    "types-pyyaml (>=6.0.12.20250822,<7.0.0.0)",
    "pyfiglet (>=1.0.4,<2.0.0)"
]

[tool.poetry]
packages = [{include = "tidycode", from = "src"}]


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
ruff = "^0.12.11"
black = "^25.1.0"
isort = "^6.0.1"
mypy = "^1.17.1"
bandit = "^1.8.6"


[tool.poetry.scripts]
tidycode = "tidycode.cli.main:app"
tidy = "tidycode.cli.main:app"



[tool.tidycode]
target = "."
check-only = false
verbose = false
tools = ["black", "isort", "ruff", "mypy"]

[tool.tidycode.clean]
target = "."
cleanable_dirs = ["__pycache__", ".pytest_cache", ".ruff_cache", ".mypy_cache", ".tox", "build", "dist"]
cleanable_files = [".coverage", "coverage.xml"]
patterns = ["*.pyc", "*.log"]
excludes = ["docs", "migrations"]

[tool.black]
line-length = 88
target-version = ["py310"]
skip-string-normalization = false
preview = true

[tool.ruff]
line-length = 88
target-version = "py310"
exclude = ["migrations", ".venv", "venv", "env", ".env", ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".ipynb_checkpoints", ".mypy_cache", ".nox", ".pants.d", ".pyenv", ".pytest_cache", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv", ".vscode", "__pypackages__", "_build", "buck-out", "build", "dist", "node_modules", "site-packages"]

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.isort]
profile = "black"
line_length = 88

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

